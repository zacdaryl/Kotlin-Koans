type: edu
files:
- name: src/Task.kt
  visible: true
  placeholders:
  - offset: 158
    length: 0
    placeholder_text: /* TODO */
    initial_state:
      length: 10
      offset: 26
    initialized_from_dependency: false
    possible_answer: |-
      fun <K, V> buildMap(build: HashMap<K, V>.() -> Unit): Map<K, V> {
          val map = HashMap<K, V>()
          map.build()
          return map
      }
    selected: true
    status: Solved
  text: |
    import java.util.HashMap

    /* TODO */

    fun usage(): Map<Int, String> {
        return buildMap {
            put(0, "0")
            for (i in 1..10) {
                put(i, "$i")
            }
        }
    }
  learner_created: false
- name: test/tests.kt
  visible: false
  text: |-
    import org.junit.Assert
    import org.junit.Test
    import koans.util.inEquals

    class TestStringAndMapBuilders {
        @Test fun testBuildMap() {
            val map: Map<Int, String> = buildMap {
                put(0, "0")
                for (i in 1..10) {
                    put(i, "$i")
                }
            }
            val expected = hashMapOf<Int, String>()
            for (i in 0..10) {
                expected[i] = "$i"
            }
            Assert.assertEquals("Map should be filled with the right values".inEquals(), expected, map)
        }
    }
  learner_created: false
status: Solved
record: -1
