type: edu
files:
- name: src/Task.kt
  visible: true
  placeholders:
  - offset: 140
    length: 160
    placeholder_text: /* TODO */
    initial_state:
      length: 10
      offset: 97
    initialized_from_dependency: false
    possible_answer: |-
      override fun compareTo(other: MyDate) = when {
              year != other.year -> year - other.year
              month != other.month -> month - other.month
              else -> dayOfMonth - other.dayOfMonth
          }
    selected: true
    status: Solved
  text: |
    data class MyDate(val year: Int, val month: Int, val dayOfMonth: Int) : Comparable<MyDate> {
        /* TODO */
    }

    fun compare(date1: MyDate, date2: MyDate) = date1 < date2
  learner_created: false
- name: test/tests.kt
  visible: false
  text: |-
    import org.junit.Assert
    import org.junit.Test
    import koans.util.toMessage

    class TestComparison {

        @Test fun testBefore() {
            val first = MyDate(2014, 5, 10)
            val second = MyDate(2014, 7, 11)
            Assert.assertTrue("compareTo".toMessage() + ": ${first} should go before ${second}", first < second)
        }

        @Test fun testAfter() {
            val first = MyDate(2014, 10, 20)
            val second = MyDate(2014, 7, 11)
            Assert.assertTrue("compareTo".toMessage() + ": ${first} should go after ${second}", first > second)
        }
    }
  learner_created: false
status: Solved
record: -1
